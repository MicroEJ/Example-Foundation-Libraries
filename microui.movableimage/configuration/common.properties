# Copyright 2023-2024 MicroEJ Corp. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be found with this software.

###############################################################################
# Runtime Options
###############################################################################

## Types
# Embed the name of all types. When this option is disabled, only names of declared required types are embedded.
soar.generate.classnames=true

## Assertions
# When this option is enabled, assert statements are executed. Please note that the executed code may produce side effects or throw java.lang.AssertionError.
core.assertions.sim.enabled=false
# When this option is enabled, assert statements are executed. Please note that the executed code may produce side effects or throw java.lang.AssertionError.
core.assertions.emb.enabled=false

## Trace
# Enable execution traces.
core.trace.enabled=false
# Start execution traces automatically.
core.trace.autostart=false

###############################################################################
# Memory Options
###############################################################################

## Heaps
# Specifies the Immortal heap size in bytes.
core.memory.immortal.size=4096
# Specifies the Java heap size in bytes.
core.memory.javaheap.size=65536

## Threads
# Specifies the thread stack block size (in bytes).
core.memory.thread.block.size=512
# Specifies the maximum number of blocks a thread can use. If a thread requires more blocks a StackOverflow error will occur.
core.memory.thread.max.size=4
# Specifies the number of blocks in the stacks pool.
core.memory.threads.pool.size=15
# Specifies the number of threads the application will be able to use at the same time.
core.memory.threads.size=5

###############################################################################
# Core Engine Options
###############################################################################

## Memory
# Specifies the maximum number of monitors a thread can own at the same time.
core.memory.thread.max.nb.monitors=8
# Specifies the maximum number of stack frames that can be dumped to the standard output when Core Engine throws an OutOfMemoryError.
core.memory.oome.nb.frames=5
# Enable Java heap usage monitoring.
com.microej.runtime.debug.heap.monitoring.enabled=false
# Specify the initial size (in bytes) of the Java Heap.
com.microej.runtime.debug.heap.monitoring.init.size=0

## SOAR
# Enable Bytecode Verifier.
soar.bytecode.verifier=false

## Multi-Sandbox
# Specifies the maximum number of threads a Feature is allowed to use at the same time.
core.memory.feature.max.threads=0
# Specifies the maximum number of Features that can be dynamically installed to this Kernel (see Kernel.install() method).
com.microej.runtime.kernel.dynamicfeatures.max=0
# Enable Feature Portability Control.
com.microej.soar.kernel.featureportabilitycontrol.enabled=false
# Specifies the path to the Kernel metadata file for Feature Portability Control.
#com.microej.soar.kernel.featureportabilitycontrol.metadata.path=C\:\\path\\

com.microej.runtime.kf.link.chunk.relocations.count=128
com.microej.runtime.kf.link.transferbuffer.size=512
com.microej.runtime.kf.waitstop.delay=2000

## Watchdog
# Enable watchdog support.
enable.watchdog.support=true
# Specifies the maximum number of active watchdogs at the same time.
maximum.active.watchdogs=4


## EDC
# Specifies the additional classes to embed at runtime.
cldc.encoding.utf8.included=true
# Enable the security manager runtime checks.
com.microej.library.edc.securitymanager.enabled=false

# Select this option to specify another Java System.out print stream.
core.outputstream.disable.uart=false
# Defines the Java class used to manage System.out.
core.outputstream.class=

###############################################################################
# Simulator Options
###############################################################################

## Options
# Use target characteristics.
s3.board.compliant=false
# This option allows the MicroEJ Simulator to be slowed down in order to match the MicroEJ Platform execution speed. The greater the slowing factor, the slower the MicroEJ Simulator runs.
s3.slow=0

## HIL Connection
# When selected allows the use of a specific HIL connection port, otherwise a random free port is used.
s3.hil.use.port=false
# It specifies the port used by the MicroEJ Simulator to accept HIL connections. Values: [1024-65535].
s3.hil.port=8001
# It specifies the time the MicroEJ Simulator should wait before failing when it invokes native methods.
s3.hil.timeout=10
# Maximum frame size in bytes. Must be increased to transfer large arrays to native side.
com.microej.simulator.hil.frame.size=262144

## Code Coverage
# Activate code coverage analysis.
s3.cc.activated=false
# Specifies the period between the generation of .cc files.
s3.cc.thread.period=15

### Debug
# Configures the JDWP debug port. Values: [1024-65535].
debug.port=12000

## Heap Dumper
# Activate heap dumper.
s3.inspect.heap=false

## Logs
console.logs.level.low=false
console.logs.level.memory=false
console.logs.level.monitoring=false
console.logs.level.monitors=false
console.logs.level.schedule=false
console.logs.level.thread=false
console.logs.period=2

## Mock
# Enable Mock debug.
com.microej.simulator.hil.debug.enabled=false
# Mock debug port.
com.microej.simulator.hil.debug.port=8002

## Multi-Sandbox Kernel UID
com.microej.simulator.kf.kernel.uid.enabled=false
com.microej.simulator.kf.kernel.uid=

###############################################################################
# MicroUI Options
###############################################################################

# Memory

# Pump events (inputs and display) queue size (in number of events)
ej.microui.memory.queue.size=100
# Pump events thread priority
com.microej.library.microui.pump.priority=5
# Images heap size (in bytes)
ej.microui.memory.imagesheap.size=275000

# Fonts

# Activate the font pre-processing step
ej.microui.fontConverter.useIt=true

# Define an explicit list file
ej.microui.fontConverter.file.enabled=false
ej.microui.fontConverter.file=

# Image

# Activate the image pre-processing step
ej.microui.imageConverter.useIt=true

# Define an explicit list file
ej.microui.imageConverter.file.enabled=false
ej.microui.imageConverter.file=